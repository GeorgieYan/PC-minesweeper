#include <stdio.h>
#include <stdlib.h>


int field[100][100];
char input[100][100];
int rows, columns;
char symbol;


int main(){
    int field_number = 1;
    int i, j, m, n, x;

    for(;;){
        scanf("%d %d", &i, &j);
        rows = i;
        columns = j;

        if(i > 100 || j > 100){
            break;
        }

        default_field();
        default_input();

        for(m = 0; m < i; m++){
            for(n = 0; n < j; n++){
                scanf("%c", symbol);
                input[m][n] = symbol;
            }
        }

        for(m = 0; m < i; m++){
            for(n = 0; n < j; n++){
                if(input[m][n] == "*"){
                    field[m][n] = -1;
                }
            }
        }

        around_num();

        printf("Field #%d:\n", field_number);

        for(i = 0; i < rows; i++){
            for(j = 0; j < columns; j++){
                x = field[i][j];

                if(x == -1){
                    printf("*");
                }
                else{
                    printf("%d", x);
                }
            }
            printf("\n");
        }

        field_number++;
    }
}

void default_input(){
    int m, n;
    for(m = 0; m < rows; m++){
        for(n = 0; n < columns; n++){
            input[m][n] = " ";
        }
    }
}

void default_field(){
    int m, n;
    for(m = 0; m < rows; m++){
        for(n = 0; n < columns; n++){
            field[m][n] = 0;
        }
    }
}

void around_num(){
    int m, n;
    int t, p;
    for(t = 0; t < rows; t++){
        for(p = 0; p < columns; p++){
            if(field[t][p] = -1){
                if(field[t - 1][p - 1] != -1){
                    field[t - 1][p - 1]++;
                }
                if(field[t - 1][p] != -1){
                    field[t - 1][p]++;
                }
                if(field[t - 1][p + 1] != -1){
                    field[t - 1][p + 1]++;
                }
                if(field[t][p - 1] != -1){
                    field[t][p - 1]++;
                }
                if(field[t][p + 1] != -1){
                    field[t][p + 1]++;
                }
                if(field[t + 1][p - 1] != -1){
                    field[t + 1][p - 1]++;
                }
                if(field[t + 1][p] != -1){
                    field[t + 1][p]++;
                }
                if(field[t + 1][p + 1] != -1){
                    field[t + 1][p + 1]++;
                }
            }
        }
    }
}

